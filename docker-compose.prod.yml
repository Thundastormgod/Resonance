# Production Docker Compose configuration
# Use this for production deployments with optimized settings

version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    networks:
      - resonance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    networks:
      - resonance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - resonance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  resonance-network:
    driver: bridge

volumes:
  ssl-certs:
    driver: local
